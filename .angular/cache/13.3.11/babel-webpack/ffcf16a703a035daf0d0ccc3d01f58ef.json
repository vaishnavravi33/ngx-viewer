{"ast":null,"code":"import _possibleConstructorReturn from \"D:\\\\Projects\\\\ngx-viewer\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\possibleConstructorReturn.js\";\nimport _isNativeReflectConstruct from \"D:\\\\Projects\\\\ngx-viewer\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\isNativeReflectConstruct.js\";\nimport _getPrototypeOf from \"D:\\\\Projects\\\\ngx-viewer\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\getPrototypeOf.js\";\nimport _get from \"D:\\\\Projects\\\\ngx-viewer\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\get.js\";\nimport _inherits from \"D:\\\\Projects\\\\ngx-viewer\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _classCallCheck from \"D:\\\\Projects\\\\ngx-viewer\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Projects\\\\ngx-viewer\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\n\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n\nfunction _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\n\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function timeoutWith(due, withObservable) {\n  var scheduler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : async;\n  return function (source) {\n    var absoluteTimeout = isDate(due);\n    var waitFor = absoluteTimeout ? +due - scheduler.now() : Math.abs(due);\n    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n  };\n}\n\nvar TimeoutWithOperator = /*#__PURE__*/function () {\n  function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {\n    _classCallCheck(this, TimeoutWithOperator);\n\n    this.waitFor = waitFor;\n    this.absoluteTimeout = absoluteTimeout;\n    this.withObservable = withObservable;\n    this.scheduler = scheduler;\n  }\n\n  return _createClass(TimeoutWithOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\n    }\n  }]);\n}();\n\nvar TimeoutWithSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\n    var _this;\n\n    _classCallCheck(this, TimeoutWithSubscriber);\n\n    _this = _callSuper(this, TimeoutWithSubscriber, [destination]);\n    _this.absoluteTimeout = absoluteTimeout;\n    _this.waitFor = waitFor;\n    _this.withObservable = withObservable;\n    _this.scheduler = scheduler;\n\n    _this.scheduleTimeout();\n\n    return _this;\n  }\n\n  _inherits(TimeoutWithSubscriber, _SimpleOuterSubscribe);\n\n  return _createClass(TimeoutWithSubscriber, [{\n    key: \"scheduleTimeout\",\n    value: function scheduleTimeout() {\n      var action = this.action;\n\n      if (action) {\n        this.action = action.schedule(this, this.waitFor);\n      } else {\n        this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));\n      }\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      if (!this.absoluteTimeout) {\n        this.scheduleTimeout();\n      }\n\n      _superPropGet(TimeoutWithSubscriber, \"_next\", this, 3)([value]);\n    }\n  }, {\n    key: \"_unsubscribe\",\n    value: function _unsubscribe() {\n      this.action = undefined;\n      this.scheduler = null;\n      this.withObservable = null;\n    }\n  }], [{\n    key: \"dispatchTimeout\",\n    value: function dispatchTimeout(subscriber) {\n      var withObservable = subscriber.withObservable;\n\n      subscriber._unsubscribeAndRecycle();\n\n      subscriber.add(innerSubscribe(withObservable, new SimpleInnerSubscriber(subscriber)));\n    }\n  }]);\n}(SimpleOuterSubscriber); //# sourceMappingURL=timeoutWith.js.map","map":null,"metadata":{},"sourceType":"module"}