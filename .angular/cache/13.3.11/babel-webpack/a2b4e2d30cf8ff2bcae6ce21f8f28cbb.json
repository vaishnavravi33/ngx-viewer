{"ast":null,"code":"import _classCallCheck from \"D:\\\\Projects\\\\ngx-viewer\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Projects\\\\ngx-viewer\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _possibleConstructorReturn from \"D:\\\\Projects\\\\ngx-viewer\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\possibleConstructorReturn.js\";\nimport _isNativeReflectConstruct from \"D:\\\\Projects\\\\ngx-viewer\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\isNativeReflectConstruct.js\";\nimport _getPrototypeOf from \"D:\\\\Projects\\\\ngx-viewer\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\getPrototypeOf.js\";\nimport _get from \"D:\\\\Projects\\\\ngx-viewer\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\get.js\";\nimport _inherits from \"D:\\\\Projects\\\\ngx-viewer\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\n\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n\nfunction _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\n\nimport { Subject } from './Subject';\nimport { Subscription } from './Subscription';\nexport var AsyncSubject = /*#__PURE__*/function (_Subject) {\n  function AsyncSubject() {\n    var _this;\n\n    _classCallCheck(this, AsyncSubject);\n\n    _this = _callSuper(this, AsyncSubject, arguments);\n    _this.value = null;\n    _this.hasNext = false;\n    _this.hasCompleted = false;\n    return _this;\n  }\n\n  _inherits(AsyncSubject, _Subject);\n\n  return _createClass(AsyncSubject, [{\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      if (this.hasError) {\n        subscriber.error(this.thrownError);\n        return Subscription.EMPTY;\n      } else if (this.hasCompleted && this.hasNext) {\n        subscriber.next(this.value);\n        subscriber.complete();\n        return Subscription.EMPTY;\n      }\n\n      return _superPropGet(AsyncSubject, \"_subscribe\", this, 3)([subscriber]);\n    }\n  }, {\n    key: \"next\",\n    value: function next(value) {\n      if (!this.hasCompleted) {\n        this.value = value;\n        this.hasNext = true;\n      }\n    }\n  }, {\n    key: \"error\",\n    value: function error(_error) {\n      if (!this.hasCompleted) {\n        _superPropGet(AsyncSubject, \"error\", this, 3)([_error]);\n      }\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      this.hasCompleted = true;\n\n      if (this.hasNext) {\n        _superPropGet(AsyncSubject, \"next\", this, 3)([this.value]);\n      }\n\n      _superPropGet(AsyncSubject, \"complete\", this, 3)([]);\n    }\n  }]);\n}(Subject); //# sourceMappingURL=AsyncSubject.js.map","map":null,"metadata":{},"sourceType":"module"}