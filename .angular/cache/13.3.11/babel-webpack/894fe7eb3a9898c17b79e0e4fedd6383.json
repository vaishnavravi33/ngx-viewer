{"ast":null,"code":"import _possibleConstructorReturn from \"D:\\\\Projects\\\\ngx-viewer\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\possibleConstructorReturn.js\";\nimport _isNativeReflectConstruct from \"D:\\\\Projects\\\\ngx-viewer\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\isNativeReflectConstruct.js\";\nimport _getPrototypeOf from \"D:\\\\Projects\\\\ngx-viewer\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\getPrototypeOf.js\";\nimport _inherits from \"D:\\\\Projects\\\\ngx-viewer\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _classCallCheck from \"D:\\\\Projects\\\\ngx-viewer\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Projects\\\\ngx-viewer\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\n\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n\nimport { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function window(windowBoundaries) {\n  return function windowOperatorFunction(source) {\n    return source.lift(new WindowOperator(windowBoundaries));\n  };\n}\n\nvar WindowOperator = /*#__PURE__*/function () {\n  function WindowOperator(windowBoundaries) {\n    _classCallCheck(this, WindowOperator);\n\n    this.windowBoundaries = windowBoundaries;\n  }\n\n  return _createClass(WindowOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      var windowSubscriber = new WindowSubscriber(subscriber);\n      var sourceSubscription = source.subscribe(windowSubscriber);\n\n      if (!sourceSubscription.closed) {\n        windowSubscriber.add(innerSubscribe(this.windowBoundaries, new SimpleInnerSubscriber(windowSubscriber)));\n      }\n\n      return sourceSubscription;\n    }\n  }]);\n}();\n\nvar WindowSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  function WindowSubscriber(destination) {\n    var _this;\n\n    _classCallCheck(this, WindowSubscriber);\n\n    _this = _callSuper(this, WindowSubscriber, [destination]);\n    _this.window = new Subject();\n    destination.next(_this.window);\n    return _this;\n  }\n\n  _inherits(WindowSubscriber, _SimpleOuterSubscribe);\n\n  return _createClass(WindowSubscriber, [{\n    key: \"notifyNext\",\n    value: function notifyNext() {\n      this.openWindow();\n    }\n  }, {\n    key: \"notifyError\",\n    value: function notifyError(error) {\n      this._error(error);\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {\n      this._complete();\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      this.window.next(value);\n    }\n  }, {\n    key: \"_error\",\n    value: function _error(err) {\n      this.window.error(err);\n      this.destination.error(err);\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.window.complete();\n      this.destination.complete();\n    }\n  }, {\n    key: \"_unsubscribe\",\n    value: function _unsubscribe() {\n      this.window = null;\n    }\n  }, {\n    key: \"openWindow\",\n    value: function openWindow() {\n      var prevWindow = this.window;\n\n      if (prevWindow) {\n        prevWindow.complete();\n      }\n\n      var destination = this.destination;\n      var newWindow = this.window = new Subject();\n      destination.next(newWindow);\n    }\n  }]);\n}(SimpleOuterSubscriber); //# sourceMappingURL=window.js.map","map":null,"metadata":{},"sourceType":"module"}